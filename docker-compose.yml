---
version: '3.2'

services:
  ################################### ELASTIC
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
      - ./kibana/scripts:/usr/share/kibana/scripts
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  ################################### KAFKA
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.2
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:5.5.2
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: "INTERNAL://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_BYTES: 1000000000  # 1 GB
      KAFKA_LOG_SEGMENT_BYTES: 10000000  # 10 MB
      KAFKA_LOG_RETENTION_MS: 86400000  # 1 day
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
  ################################### FLINK
  jobmanager:
    build:
      context: ./flink
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: jobmanager
        jobmanager.memory.process.size: 1000Mb
        parallelism.default: 2
    command: ["jobmanager"]
    volumes:
      - ./flink/src:/opt/flink/src
      - ./flink/input:/opt/flink/input
    ports:
      - "8081:8081"
  taskmanager:
    build:
      context: ./flink
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: jobmanager
        taskmanager.memory.process.size: 6000Mb
    command: ["taskmanager"]
    volumes:
      - ./flink/src:/opt/flink/src
      - ./flink/input:/opt/flink/input
  ################################### LOGSTASH
  logstash:
    build:
      context: ./logstash
    volumes:
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./logstash/scripts:/usr/share/logstash/scripts
      - ./logstash/index-templates:/usr/share/logstash/index-templates
      - ./logstash/pipeline:/usr/share/logstash/pipeline
volumes:
  elasticsearch:
